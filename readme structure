#!/bin/bash

# Logstash server details
LOGSTASH_HOST="your_logstash_server_ip"
LOGSTASH_PORT=5000 # Change this to the port your Logstash is configured to listen on

# Number of concurrent connections to simulate
CONCURRENT_CONNECTIONS=100

# Number of events to send per connection
EVENTS_PER_CONNECTION=1000

# Function to generate a sample event
generate_event() {
    # Modify this function to generate your own sample event data
    echo '{"message": "This is a sample log event."}'
}

# Function to simulate a single connection
simulate_connection() {
    local connection_id=$1
    local event_count=0

    while [ $event_count -lt $EVENTS_PER_CONNECTION ]; do
        event=$(generate_event)
        echo -e "$event" | nc -w1 $LOGSTASH_HOST $LOGSTASH_PORT
        ((event_count++))
    done

    echo "Connection $connection_id completed."
}

# Main loop to simulate multiple connections
for ((i = 1; i <= $CONCURRENT_CONNECTIONS; i++)); do
    simulate_connection $i &
done

# Wait for all background jobs to complete
wait

echo "Load testing completed."


Make sure to modify the LOGSTASH_HOST variable to your Logstash server's IP address or hostname. You can also adjust the LOGSTASH_PORT variable if your Logstash instance uses a different port.

Please note that the generate_event() function in this script generates a simple JSON log event. Depending on your use case, you may want to customize this function to generate real data relevant to your log processing pipeline.

Also, be cautious when running this script with a high number of concurrent connections as it can put a significant load on your Logstash server and may affect its performance. Ensure that your Logstash server and environment can handle the increased load during the testing process. Always perform load testing on non-production environments and with caution.
